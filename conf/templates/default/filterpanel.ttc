#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1195495110',
        'name' => 'filterpanel.tt',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    
    
#line 12 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $context->process('filtercollection.tt');
#line 13 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $context->process('collapsible_section.tt');
#line 14 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $context->process('filter.tt');
    $output .=  "\n[* param_prefix = param_prefix || '' # just so we don't get undef-errors if no prefix is specified *]\n[* js_session_value_of_filtermenu = {} *]\n\n<div id=\"";
#line 19 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get(['dataset', 0, 'name', 0]);
    $output .=  "__filterpanel\" style=\"display: none; width:100%; height:100%; overflow:auto; position: relative;\">\n<table width=\"100%\" height=\"100%\"  border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"table-layout: fixed;\">\n<tr>\n<td width=\"100%\" height=\"100%\" valign=\"top\" align=\"left\">\n\n<div class=\"dummyLine_1\" align=\"center\"><b>Please restrict your query using criteria below</b></div>\n\n<div class=\"mart_filterpanel\">\n";
    
#line 114 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('filtertrees');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'filtertree'} = $_tt_value;
#line 30 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    if ($stash->get(['filtertree', 0, 'hideDisplay', 0]) eq 'true') {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
#line 32 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $stash->set('default_filters', [ ]);
    
    $output .=  "	";
#line 34 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $stash->set('filtgroupcount', 0);
    
#line 37 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['filtertree', 0, 'getAllFilterGroups', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'filtergroup'} = $_tt_value;
#line 36 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $stash->set('filtgroupcount', $stash->get('filtgroupcount') + 1);
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "	";
#line 43 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    if ($stash->get('filtgroupcount') > 1) {
#line 40 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $stash->set('filtergroup_initial_state', 'hide');
    
    }
    else {
#line 42 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $stash->set('filtergroup_initial_state', 'show');
    
    }
    
    
#line 49 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $stash->set('default_attributes', [ ]);
    
#line 112 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['filtertree', 0, 'getAllFilterGroups', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'filtergroup'} = $_tt_value;
#line 51 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    if ($stash->get(['filtergroup', 0, 'hideDisplay', 0]) eq 'true') {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR2;
    
    }
    
    $output .=  "\n		<div class=\"mart_filtergroup floatholder\">\n";
    
#line 56 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $stash->set('filtergroup_parname', '${param_prefix}filtergroup.'  . $stash->get(['filtergroup', 0, 'name', 0]));
    
    $output .=  "		[* render_collapse_controls(\"";
#line 57 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get('filtergroup_parname');
    $output .=  "\", \"";
#line 57 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get(['filtergroup', 0, 'displayName', 0]);
    $output .=  "\", \"";
#line 57 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get('filtergroup_initial_state');
    $output .=  "\", \"";
#line 57 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get(['filtergroup', 0, 'description', 0]);
    $output .=  "\" ) *]";
#line 58 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    
    # CAPTURE
    $stash->set('filtergroup_initial_state', do {
        my $output = '';
    if ($stash->get('filtergroup_initial_state') eq 'show') {
    $output .=  'hide';
    }
    
        $output;
    });
    
#line 107 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['filtergroup', 0, 'getAllCollections', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR3:   while (! $_tt_error) {
                $stash->{'filtercollection'} = $_tt_value;
#line 61 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    if ($stash->get(['filtercollection', 0, 'hideDisplay', 0]) eq 'true') {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR3;
    
    }
    
    $output .=  "	\n			<div class=\"mart_filtercollection\" id=\"[* param_prefix *]filtercollection.";
#line 63 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get(['filtercollection', 0, 'name', 0]);
    $output .=  "\">\n";
    
#line 69 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $stash->set('filters', $stash->get(['filtercollection', 0, 'getAllFilters', 0]));
    
    $output .=  "		";
#line 102 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    if ($stash->get(['filters', 0, 'size', 0]) > 1) {
    
#line 74 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $stash->set('filtercollection_paramname', ('' . "\${param_prefix}filtercollection.")  . $stash->get(['filtercollection', 0, 'name', 0]));
    
#line 76 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get(['render_filtercollection_checkbox', [ $stash->get(['filters', 0, 0, 0]), $stash->get('filtercollection') ]]);
#line 81 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    if ($stash->get(['filtercollection', 0, 'description', 0])) {
    $output .=  "				  <a title=\"";
#line 78 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('replace', [ '"', '&quot;' ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['filtercollection', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 78 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get(['filtercollection', 0, 'displayName', 0]);
    $output .=  "</a>";
    }
    else {
    $output .=  "					";
#line 80 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get(['filtercollection', 0, 'displayName', 0]);
    }
    
    
#line 90 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['filtercollection', 0, 'getAllFilters', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR4:   while (! $_tt_error) {
                $stash->{'filter'} = $_tt_value;
#line 85 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    if ($stash->get(['filter', 0, 'hideDisplay', 0]) eq 'true') {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR4;
    
    }
    
#line 86 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get(['render_filter', [ $stash->get('filter') ]]);
#line 89 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    if ($stash->get(['filter', 0, 'defaultOn', 0, 'defined', 0]) && $stash->get(['filter', 0, 'defaultOn', 0]) eq 'true') {
#line 1 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get(['default_filters', 0, 'push', [ ("\"" . $stash->get('filtercollection_paramname') . "\"") ]]);
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "				<br />";
    }
    elsif ($stash->get(['filters', 0, 'size', 0]) eq 1) {
#line 93 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $stash->set('filter', $stash->get(['filters', 0, 0, 0]));
    
#line 94 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    if ($stash->get(['filter', 0, 'hideDisplay', 0]) eq 'true') {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR3;
    
    }
    
#line 95 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get(['render_filter', [ $stash->get('filter'), $stash->get('filtercollection') ]]);
#line 96 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $stash->set('filtercollection_paramname', ('' . "\${param_prefix}filtercollection.")  . $stash->get(['filtercollection', 0, 'name', 0]));
    
#line 99 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    if ($stash->get(['filter', 0, 'defaultOn', 0, 'defined', 0]) && $stash->get(['filter', 0, 'defaultOn', 0]) eq 'true') {
#line 1 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get(['default_filters', 0, 'push', [ ("\"" . $stash->get('filtercollection_paramname') . "\"") ]]);
    }
    
    }
    else {
    
    }
    
    $output .=  "			</div>\n\n			<!-- this is just a dummy div to prevent the contents of last filter collection from falling out of div - only happens in IE 6 -->\n			<div class=\"collectionBREAK\"></div>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n		</div>\n		</div>\n    ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "  ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    
    $output .=  "<script language=\"JavaScript\" type=\"text/javascript\" >\n//<![CDATA[\n\n// All pushaction-info collected from filter-configs, as one big hash\nvar \${param_prefix}pushActionsOfFiltermenu = ";
#line 122 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get(['tbuilder', 0, 'perlhash2js', [ $stash->get('js_pushactions_of_filtermenu') ]]);
    $output .=  ";\n\n// Set up list of selected options for pushaction-menus as stored in session. Needed to\n// set the selected option for those menus in the pa-updating function.\nvar \${param_prefix}sessionValueOfFiltermenu = [* wq.perlhash2js(js_session_value_of_filtermenu) *];\n\n// Initial update of all pushaction-menus on page load\n  //  foreach menu in big pushaction-info hash\nfor(var pa_menuname in \${param_prefix}pushActionsOfFiltermenu) {\n   var pa_menu = document.mainform.elements[pa_menuname];\n   \n   if(pa_menu) {\n	 //  alert(\"getting pa-info for menu \" + pa_menuname + \", obj \" + pa_menu);\n      updateMenuPushactions(pa_menu, \${param_prefix}pushActionsOfFiltermenu, \${param_prefix}sessionValueOfFiltermenu);\n   }\n}\n\n\n[* filts_to_check = session.param(\"\${param_prefix}filtercollections\") *]\n[* IF !filts_to_check || filts_to_check == ' ' *]\n	[* filts_to_check = [";
#line 142 "/Users/do2/projects/htgt_mart/server/conf/templates/default/filterpanel.tt"
    $output .=  $stash->get(['default_filters', 0, 'join', [ ',' ]]);
    $output .=  "]  *]\n[* END *]\n[* tmp_array = [] *]\n[* FOREACH filt = filts_to_check *]\n	[* NEXT IF filt == \" \" *]\n		[* tmp_array.push(\"'\$filt' : ''\") *]\n[* END *]\n\n//]]>\n</script>\n\n\n<script language=\"JavaScript\" type=\"text/javascript\" >\n	// setting the options of selectMenus to checked \n	var \${param_prefix}sessionValueOfFiltermenu_1 = [* wq.perlhash2js(js_session_value_of_filtermenu) *];\n	for(var filterCollectionEltName in {\n		[* tmp_array.join(\",\\n\") *]}) \n	{\n		updateSelectMenu(filterCollectionEltName, \${param_prefix}sessionValueOfFiltermenu_1);\n	}	\n\n</script>\n\n\n<script language=\"JavaScript\" type=\"text/javascript\" >\n// Update summary-tree on side panel according to info stored in the session, defer works for internet explorer OPERATION ABORTED ERROR\n\n	for(var filterCollectionEltName in {\n		[* tmp_array.join(\",\\n\") *]}) \n	{\n		//alert('Updating filters in fcollection '+filterCollectionEltName);\n   		//enableFiltersInCollection(filterCollectionEltName);\n		//This enableFiltersUpdateSummaryPanel function is not defined anywhere? [why ? It is there in javascript....]\n		enableFiltersUpdateSummaryPanel(filterCollectionEltName);\n	}\n	\n</script>\n\n\n\n</div>\n\n</td>\n</tr>\n</table>\n\n</div>\n\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
